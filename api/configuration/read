#!/usr/bin/perl

#
# Copyright (C) 2020 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use warnings;
use strict;
use JSON;
use esmith::ConfigDB;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';

sub format_category
{
    my $name = shift;
    my $source = shift;
    my $alert = shift;
    my $block = shift;
    my $status = 'disable';
    my $description = $name;
    $description =~ s/ET(-emerging)*(-)*//;
    $description =~ s/_/ /g;

    foreach (@{$block}) {
        $status = 'block' if ($_ eq $name);
    }

    foreach (@{$alert}) {
        $status = 'alert' if ($_ eq $name);
    }

    return { "name" => $name, "Description" => ucfirst($description), "status" => $status, "Source" => $source };
}

my $input = readInput();
my $cmd = $input->{'action'};

my $ret;
my $db = esmith::ConfigDB->open_ro();
my (@categories, @alert, @block);
if ($cmd eq 'configuration') {
    @alert = split(",", $db->get_prop('suricata', 'AlertCategories'));
    @block = split(",", $db->get_prop('suricata', 'BlockCategories'));
    $ret->{'status'} = $db->get_prop('suricata', 'status');
} elsif ($cmd eq 'default-categories') {
    @alert = qw(ET-emerging-current_events ET-emerging-dos ET-emerging-ftp ET-emerging-games ET-emerging-inappropriate ET-emerging-info ET-emerging-misc ET-emerging-mobile_malware ET-emerging-p2p ET-emerging-scan ET-emerging-shellcode ET-emerging-sql ET-emerging-trojan ET-emerging-voip ET-emerging-web_client ET-emerging-worm);
    @block = qw(ET-botcc.portgrouped ET-botcc ET-ciarmy ET-compromised ET-drop ET-dshield ET-emerging-activex ET-emerging-attack_response ET-emerging-exploit ET-emerging-malware ET-emerging-netbios);
}
my $out = `/usr/libexec/nethserver/suricata-list-categories`;
foreach (@{safe_decode_json($out)}) {
    # skip non-ET categories
    next if ($_ !~ /^ET/);
    push(@categories, format_category($_, 'Emerging Threats', \@alert, \@block));
}
$ret->{'categories'} = \@categories;

print encode_json($ret);
