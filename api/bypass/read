#!/usr/bin/perl

#
# Copyright (C) 2020 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use warnings;
use esmith::ConfigDB;
use esmith::HostsDB;
use JSON;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';

my $input = readInput();
my $cmd = $input->{'action'};

my $ret = {};

if ($cmd eq 'bypass-list') {
    my $db = esmith::ConfigDB->open_ro('ips');
    my @bypasses;
    foreach ($db->get_all_by_prop('type' => 'bypass')) {
        my %props = $_->props;
        my $obj = {'name' => $_->key, 'type' => 'bypass'};
        delete($props{'type'});
        if ($props{'Host'}) {
            my ($t, $k) = split(';', $props{'Host'});
            # check if host is raw (like an IP) or not
            if ($k eq '') {
                $k = $t;
                $t = 'raw';
            }
            $props{'Host'} = {'type' => $t, 'name' => $k};
        }
        $obj->{'props'} = \%props;
        push(@bypasses, $obj);
    }

    $ret->{'bypasses'} = \@bypasses;

} elsif ($cmd eq 'object-list') {

    my @objects;
    my $hdb = esmith::HostsDB->open_ro();
    # Objects
    foreach ($hdb->get_all()) {
        my %props = $_->props;
        $props{'name'} = $_->key;
	
	# convert type local to host
	if($props{'type'} eq 'local') {
            $props{'type'} = 'host';
	}	

        push(@objects, \%props);
    }

    $ret->{'objects'} = \@objects;

}

print encode_json($ret);
